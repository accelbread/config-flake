#!/usr/bin/env bash
set -xeuo pipefail

export PATH=@path@

disks=(@devices@)
disksPart=(@devicesPart@)
name=@hostname@
size=@size@
swap=@swap@

btrfs_devices=()

for i in $(seq 1 ${#disks[@]}); do
    disk=${disks[$i-1]}
    diskPart=${disksPart[$i-1]}
    wipefs -af "$disk"
    blkdiscard "$disk" || true
    parted "$disk" mklabel gpt
    parted -a optimal "$disk" mkpart primary 1MiB 1GiB
    parted "$disk" name 1 "${name}_EFI${i}"
    parted "$disk" set 1 boot on
    parted "$disk" set 1 esp on
    parted "$disk" mkpart primary 1GiB "$size"
    parted "$disk" name 2 "${name}_disk${i}_crypt"
    mkfs.vfat -n "EFI${i}" "${diskPart}1"
    cryptsetup luksFormat "${diskPart}2" --integrity hmac-sha256
    cryptsetup open "${diskPart}2" "${name}_disk${i}" \
        --persistent --integrity-no-journal
    pvcreate "/dev/mapper/${name}_disk${i}"
    vgcreate "${name}_vg${i}" "/dev/mapper/${name}_disk${i}"
    lvcreate -L "$swap" "${name}_vg${i}" -n swap
    lvcreate -l +100%FREE "${name}_vg${i}" -n pool
    mkswap -L "${name}_swap${i}" "/dev/${name}_vg${i}/swap"
    btrfs_devices+=("/dev/${name}_vg${i}/pool")
done

if [[ "${#btrfs_devices[@]}" -eq 1 ]]; then
    mkfs.btrfs -L "${name}_pool" -m dup -d dup "${btrfs_devices[@]}"
else
    mkfs.btrfs -L "${name}_pool" -m raid1 -d raid1 "${btrfs_devices[@]}"
fi

options="noatime,compress=zstd,X-mount.mkdir"

mount -t btrfs -o "${options}" "${btrfs_devices[0]}" /mnt
(cd /mnt
 btrfs subvolume create nix
 btrfs subvolume create persist
 btrfs subvolume create persist/home
 btrfs subvolume create persist/.snapshots
 btrfs subvolume create root
 mkdir persist/vault
 chmod 700 persist/vault
 mkpasswd --method=SHA-512 > persist/vault/user_pass
)
umount /mnt

for i in $(seq 1 ${#disks[@]}); do
    vgchange -a n "${name}_vg${i}"
    cryptsetup close "${name}_disk${i}"
done
